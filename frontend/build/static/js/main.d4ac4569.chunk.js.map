{"version":3,"sources":["helpers/formatsize/formatsize.tsx","components/Converter/components/Uploader/components/FileListGrid/FileListGrid.tsx","components/Converter/components/Uploader/components/FileSelector/FileSelector.tsx","components/Converter/components/Uploader/components/Toolbar/Toolbar.tsx","components/Converter/components/Uploader/Uploader.tsx","components/MessageBar/MessageBar.tsx","components/Converter/components/ResultViewer/components/OpmlViewer/OpmlViewer.tsx","components/Converter/components/ResultViewer/components/ResultRow/ResultRow.tsx","components/Converter/components/ResultViewer/ResultViewer.tsx","components/Converter/Converter.tsx","theme/palette.tsx","theme/typography.tsx","theme/overrides/MuiTableCell.tsx","theme/overrides/index.tsx","theme/overrides/MuiButton.tsx","theme/overrides/MuiIconButton.tsx","theme/overrides/MuiPaper.tsx","theme/overrides/MuiTableHead.tsx","theme/overrides/MuiTypography.tsx","theme/theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["sizes","size","opts","mysize","nospace","one","places","numOnly","id","length","unit","slice","s","Math","pow","fixed","String","toFixed","indexOf","Number","parseFloat","useStyles","makeStyles","theme","itemAvatar","minWidth","lineThrough","textDecoration","color","danger","red","FileListGrid","PropTypes","array","isRequired","func","bool","props","files","onDeleteFile","disableInput","classes","List","map","data","index","key","ListItem","ListItemAvatar","className","ListItemText","primary","file","name","secondary","isValid","status","formatsize","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","handleDelete","disabled","Divider","hidden","display","buttonNoFile","padding","button","border","outline","flexWrap","alignItems","justifyContent","cursor","opacity","backgroundColor","file_img","width","FileSelector","number","onSelect","filesCount","htmlFor","clsx","multiple","type","onChange","event","target","i","value","alt","src","Typography","variant","paragraph","controls","spacing","wrapper","position","buttonProgress","green","top","left","marginTop","marginLeft","Toolbar","onClearAll","hasFiles","hasValidFiles","onConvert","CardActions","Button","CircularProgress","card","Uploader","onConvertSuccess","useState","converting","setConverting","setData","uploadFile","form","FormData","append","Promise","res","axios","post","then","catch","Container","maxWidth","Card","CardContent","push","path","extname","toLowerCase","splice","valid","forEach","upload","fileData","all","spread","results","allSuccess","result","isAxiosError","response","message","success","icon","fontSize","iconVariant","marginRight","MessageBar","string","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","aria-describedby","Icon","action","createStyles","appBar","title","flex","xml","margin","whiteSpace","Transition","React","forwardRef","ref","Slide","direction","OpmlViewer","fileName","toastrOpen","setToastrOpen","handleOnClose","reason","Dialog","fullScreen","TransitionComponent","AppBar","Tooltip","xmlFormatter","any","row","marginBottom","content","filename","flexGrow","ResultRow","preview","setPreview","btn","useRef","useEffect","btnClipboard","current","clipboardJS","text","trigger","opml","destroy","tooglePreview","arrayOf","root","toolbar","ResultViewer","onNew","Grid","container","justify","item","Converter","setResult","convertResult","white","palletOptions","black","contrastText","dark","colors","indigo","main","light","blue","info","warning","orange","error","blueGrey","link","background","default","paper","divider","grey","typography","h1","palette","fontWeight","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","borderBottom","MuiTableHead","MuiTypography","gutterBottom","createMuiTheme","overrides","zIndex","drawer","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ac4569.chunk.js","sourcesContent":["let sizes: string[] = [\r\n    'Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB'\r\n];\r\n\r\ntype options = {\r\n    nospace?: boolean,\r\n    one?: boolean,\r\n    places?: number,\r\n    numOnly?: boolean\r\n};\r\n\r\nexport default function (size: number, opts?: options) {\r\n    const nospace = opts ? opts.nospace : true;\r\n    const one = opts ? opts.one : true;\r\n    const places = opts ? opts.places || 1 : 1;\r\n    const numOnly = opts ? opts.numOnly : false;\r\n    let mysize: any;\r\n\r\n    for (let id = 0; id < sizes.length; ++id) {\r\n        let unit: string = sizes[id];\r\n\r\n        if (one) {\r\n            unit = unit.slice(0, 1);\r\n        }\r\n\r\n        let s: number = Math.pow(1024, id);\r\n        let fixed: string;\r\n        if (size >= s) {\r\n            fixed = String((size / s).toFixed(places));\r\n            if (fixed.indexOf('.0') === fixed.length - 2) {\r\n                fixed = fixed.slice(0, -2);\r\n            }\r\n            mysize = fixed + (nospace ? '' : ' ') + unit;\r\n        }\r\n    }\r\n\r\n    // zero handling\r\n    // always prints in Bytes\r\n    if (!mysize) {\r\n        let _unit = (one ? sizes[0].slice(0, 1) : sizes[0]);\r\n        mysize = '0' + (nospace ? '' : ' ') + _unit;\r\n    }\r\n\r\n    if (numOnly) {\r\n        mysize = Number.parseFloat(mysize);\r\n    }\r\n\r\n    return mysize;\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport {\r\n    Theme,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    List,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    Divider\r\n} from '@material-ui/core';\r\nimport FolderIcon from '@material-ui/icons/Description';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes, { InferProps } from 'prop-types';\r\nimport { formatsize } from \"../../../../../../helpers\";\r\nimport { dataRow } from \"../../Uploader\";\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    itemAvatar: {\r\n        minWidth: \"40px\"\r\n    },\r\n    lineThrough: {\r\n        textDecoration: \"line-through\",\r\n        color: \"#9e9e9e\"\r\n    },\r\n    danger: {\r\n        color: red[400]\r\n    }\r\n}));\r\n\r\nconst FileListProps = {\r\n    files: PropTypes.array.isRequired,\r\n    onDeleteFile: PropTypes.func.isRequired,\r\n    disableInput: PropTypes.bool.isRequired\r\n}\r\n\r\ntype FileListProps = InferProps<typeof FileListProps>;\r\n\r\nconst FileListGrid: React.FC<FileListProps> = (props) => {\r\n\r\n    const { files, onDeleteFile, disableInput } = props;\r\n    const classes = useStyles();\r\n    const handleDelete = (index: number) => {\r\n        onDeleteFile(index);\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {files.map((data: dataRow, index: number) => (\r\n                <Fragment key={index}>\r\n                    <ListItem>\r\n                        <ListItemAvatar className={classes.itemAvatar}>\r\n                            <FolderIcon />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={data.file.name}\r\n                            secondary={data.isValid && !data.status ? formatsize(data.file.size, {\r\n                                one: false\r\n                            }) : (data.status ? data.status : \"Invalid File\")}\r\n                            classes={data.isValid && !data.status ? {} : (data.status ? { secondary: classes.danger } : { primary: classes.lineThrough })}\r\n                        />\r\n                        <ListItemSecondaryAction >\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"delete\"\r\n                                onClick={() => handleDelete(index)}\r\n                                disabled={disableInput}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </Fragment>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nFileListGrid.propTypes = FileListProps;\r\n\r\nexport default FileListGrid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Theme,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport PropTypes, { InferProps } from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    hidden: {\r\n        display: 'none',\r\n    },\r\n    buttonNoFile: {\r\n        padding: \"48px\",\r\n    },\r\n    button: {\r\n        border: \"1px dashed #eeeeee\",\r\n        display: \"flex\",\r\n        outline: \"none\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        '&:hover': {\r\n            cursor: \"pointer\",\r\n            opacity: 0.5,\r\n            backgroundColor: \"#fafafa\"\r\n        }\r\n    },\r\n    file_img: {\r\n        width: \"130px\"\r\n    }\r\n}));\r\n\r\nconst FileSelectorProps = {\r\n    onSelect: PropTypes.func.isRequired,\r\n    filesCount: PropTypes.number.isRequired,\r\n    disableInput: PropTypes.bool.isRequired\r\n}\r\n\r\ntype FileSelectorProps = InferProps<typeof FileSelectorProps>;\r\n\r\nconst FileSelector: React.FC<FileSelectorProps> = (props) => {\r\n\r\n    const { onSelect, filesCount, disableInput } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event: { target: HTMLInputElement }) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                onSelect(files[i]);\r\n            }\r\n        }\r\n        event.target.value = \"\";\r\n    }\r\n\r\n\r\n    return (\r\n        <label htmlFor=\"input-file\">\r\n            <div className={clsx(classes.button, {\r\n                [classes.buttonNoFile]: filesCount === 0\r\n            })} >\r\n                <input\r\n                    id=\"input-file\"\r\n                    multiple type=\"file\"\r\n                    className={classes.hidden}\r\n                    onChange={handleChange}\r\n                    disabled={disableInput}\r\n                />\r\n                <div>\r\n                    <img\r\n                        alt=\"Select files\"\r\n                        src=\"/images/undraw_add_file2_gvbb.svg\"\r\n                        className={classes.file_img}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Typography variant=\"h3\">Select files</Typography>\r\n                    <Typography paragraph>Click here to open file browser.</Typography>\r\n                </div>\r\n            </div>\r\n        </label >\r\n    );\r\n}\r\n\r\nFileSelector.propTypes = FileSelectorProps;\r\n\r\nexport default FileSelector;","import React from 'react';\r\nimport { CardActions, Button, makeStyles, Theme, CircularProgress } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport PropTypes, { InferProps } from 'prop-types';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    controls: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(2)\r\n    },\r\n    hidden: {\r\n        display: \"none\"\r\n    },\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nconst ToolbarProps = {\r\n    hasFiles: PropTypes.bool.isRequired,\r\n    onClearAll: PropTypes.func.isRequired,\r\n    hasValidFiles: PropTypes.bool.isRequired,\r\n    onConvert: PropTypes.func.isRequired,\r\n    disableInput: PropTypes.bool.isRequired\r\n};\r\n\r\ntype ToolbarProps = InferProps<typeof ToolbarProps>;\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\r\n    const { onClearAll, hasFiles, hasValidFiles, onConvert, disableInput } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleConvert = () => {\r\n        onConvert();\r\n    }\r\n\r\n    return (\r\n        <CardActions className={clsx(classes.controls, {\r\n            [classes.hidden]: hasFiles\r\n        })} >\r\n            <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={onClearAll}\r\n                disabled={disableInput}\r\n            >\r\n                Clear All\r\n            </Button>\r\n            <div className={classes.wrapper}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    disabled={hasValidFiles || disableInput}\r\n                    onClick={handleConvert}\r\n                >\r\n                    Convert\r\n                </Button>\r\n                {disableInput && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n            </div>\r\n\r\n        </CardActions>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","import React, { useState } from 'react';\r\nimport { CardContent, Container, Card, makeStyles, Theme } from '@material-ui/core';\r\nimport { FileSelector, FileListGrid, Toolbar } from './components';\r\nimport axios from \"axios\";\r\nimport path from \"path\";\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    card: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nexport type dataRow = {\r\n    file: File,\r\n    isValid: boolean,\r\n    status?: string\r\n}\r\n\r\ninterface DataSet {\r\n    files: dataRow[]\r\n}\r\n\r\nconst UploaderProps = {\r\n    onConvertSuccess: PropTypes.func.isRequired\r\n}\r\n\r\ntype UploaderProps = InferProps<typeof UploaderProps>\r\n\r\nconst Uploader: React.FC<UploaderProps> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const { onConvertSuccess } = props;\r\n    const dataSet: DataSet = { files: [] };\r\n    const [converting, setConverting] = useState(false);\r\n    const [data, setData] = useState(dataSet);\r\n\r\n    const handleAddFile = (file: File): void => {\r\n        data.files.push({\r\n            isValid: path.extname(file.name).toLowerCase() === \".xls\",\r\n            file: file\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    const handleDelete = (index: number): void => {\r\n        data.files.splice(index, 1);\r\n        setData({ ...data });\r\n    }\r\n\r\n    const handleClearAll = (): void => {\r\n        data.files = [];\r\n        setData({ ...data });\r\n    }\r\n\r\n    const hasValidFiles = (): boolean => {\r\n        let valid: boolean = true;\r\n        data.files.forEach((file) => {\r\n            valid = valid && !file.isValid;\r\n        });\r\n        return valid;\r\n    }\r\n\r\n    const handleConvert = () => {\r\n        let upload: Promise<any>[] = [];\r\n        setConverting(true);\r\n\r\n        data.files.forEach((fileData, index: number) => {\r\n            if (fileData.isValid) {\r\n                data.files[index].status = \"\";\r\n                setData({ ...data });\r\n\r\n                upload.push(uploadFile(fileData.file))\r\n            }\r\n        });\r\n\r\n        axios\r\n            .all(upload)\r\n            .then(axios.spread(function (...results) {\r\n                let allSuccess: boolean = true;\r\n                setConverting(false);\r\n\r\n                results = results.map((result, index: number) => {\r\n                    allSuccess = allSuccess && !result.isAxiosError;\r\n                    if (result.isAxiosError) {\r\n                        data.files[index].status = \"Conversion Failed. \" + (result.response.data.message || \"\");\r\n                        setData({ ...data });\r\n                    }\r\n                    return result.data;\r\n                });\r\n\r\n                if (allSuccess) {\r\n                    onConvertSuccess(results);\r\n                }\r\n            }))\r\n\r\n    }\r\n\r\n    const uploadFile = (file: File) => {\r\n        let form: FormData = new FormData();\r\n        form.append(\"file\", file);\r\n        return new Promise((res) => (axios.post(`/api/convert`, form).then(res).catch(res)));\r\n    }\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <FileSelector\r\n                        onSelect={handleAddFile}\r\n                        filesCount={data.files.length}\r\n                        disableInput={converting}\r\n                    />\r\n                    <FileListGrid\r\n                        files={data.files}\r\n                        onDeleteFile={handleDelete}\r\n                        disableInput={converting}\r\n                    />\r\n                </CardContent>\r\n                <Toolbar\r\n                    hasFiles={data.files.length === 0}\r\n                    onClearAll={handleClearAll}\r\n                    hasValidFiles={hasValidFiles()}\r\n                    onConvert={handleConvert}\r\n                    disableInput={converting}\r\n                />\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nUploader.propTypes = UploaderProps;\r\n\r\nexport default Uploader;","import React from 'react';\r\nimport { Snackbar, SnackbarContent, Icon, IconButton, makeStyles, Theme } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { green } from '@material-ui/core/colors';\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MessageBarProps = {\r\n    open: PropTypes.bool.isRequired,\r\n    message: PropTypes.string.isRequired,\r\n    variant: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\ntype MessageBarProps = InferProps<typeof MessageBarProps>;\r\n\r\nconst MessageBar: React.FC<MessageBarProps> = (props) => {\r\n    const { open, message, variant, onClose } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={2000}\r\n            onClose={onClose}\r\n        >\r\n            <SnackbarContent\r\n                className={classes[variant]}\r\n                aria-describedby=\"client-snackbar\"\r\n                message={\r\n                    <span id=\"client-snackbar\">\r\n                        <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                        {message}\r\n                    </span>\r\n                }\r\n                action={[\r\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nMessageBar.propTypes = MessageBarProps;\r\n\r\nexport default MessageBar;","import React, { useState, SyntheticEvent } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { Typography } from '@material-ui/core';\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\nimport xmlFormatter from \"xml-formatter\";\r\nimport MessageBar from '../../../../../MessageBar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: 'relative',\r\n        },\r\n        title: {\r\n            flex: 1,\r\n            color: \"#ffffff\"\r\n        },\r\n        xml: {\r\n            margin: theme.spacing(2),\r\n            whiteSpace: \"pre-wrap\"\r\n        }\r\n    }),\r\n);\r\n\r\nconst OpmlViewerProps = {\r\n    fileName: PropTypes.string.isRequired,\r\n    data: PropTypes.string.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\ntype OpmlViewerProps = InferProps<typeof OpmlViewerProps>;\r\n\r\nconst Transition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst OpmlViewer: React.FC<OpmlViewerProps> = (props: OpmlViewerProps) => {\r\n\r\n    const { data, open, onClose, fileName } = props;\r\n    const [toastrOpen, setToastrOpen] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleToastrClose = (event?: SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setToastrOpen(false);\r\n    }\r\n\r\n    const handleOnClose = () => {\r\n        onClose();\r\n    }   \r\n\r\n    return (\r\n        <>\r\n            <MessageBar\r\n                open={toastrOpen}\r\n                message=\"Copied!\"\r\n                variant=\"success\"\r\n                onClose={handleToastrClose}\r\n            />\r\n            <Dialog fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition} >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h4\" className={classes.title}>\r\n                            {fileName}\r\n                        </Typography>\r\n                        <Tooltip title=\"Close\" aria-label=\"Close\">\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                onClick={handleOnClose}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <pre className={classes.xml}>\r\n                    {xmlFormatter(data)}\r\n                </pre>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nOpmlViewer.propTypes = OpmlViewerProps;\r\n\r\nexport default OpmlViewer;","import React, { useState, useEffect, useRef, SyntheticEvent } from 'react';\r\nimport { Card, CardContent, makeStyles, Theme, Typography, Button } from '@material-ui/core';\r\nimport OpmlViewer from \"../OpmlViewer\";\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\nimport clipboardJS from \"clipboard\";\r\nimport MessageBar from \"../../../../../MessageBar\";\r\n\r\nconst ResultViewProps = {\r\n    row: PropTypes.any.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    row: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    content: {\r\n        display: \"flex\"\r\n    },\r\n    filename: {\r\n        flexGrow: 1,\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    spacing: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\ntype ResultViewProps = InferProps<typeof ResultViewProps>\r\n\r\nconst ResultRow: React.FC<ResultViewProps> = (props) => {\r\n    const [toastrOpen, setToastrOpen] = useState(false);\r\n    const [preview, setPreview] = useState(false);\r\n\r\n    const btn = useRef<HTMLButtonElement>(null);\r\n    const classes = useStyles();\r\n    const { row } = props;\r\n\r\n    useEffect(() => {\r\n        let btnClipboard: clipboardJS;\r\n        if (btn.current)\r\n            btnClipboard = new clipboardJS(btn.current, {\r\n                text: function (trigger) {\r\n                    setToastrOpen(true);\r\n                    return row.opml;\r\n                }\r\n            });\r\n        return () => {\r\n            if (btnClipboard)\r\n                btnClipboard.destroy();\r\n        }\r\n    }, []);//add [] to execute once\r\n\r\n    const handleClose = (event?: SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setToastrOpen(false);\r\n    }\r\n\r\n    const tooglePreview = () => {\r\n        setPreview(!preview);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <OpmlViewer\r\n                open={preview}\r\n                data={row.opml}\r\n                onClose={tooglePreview}\r\n                fileName={row.fileName}\r\n            />\r\n            <MessageBar\r\n                open={toastrOpen}\r\n                message=\"Copied!\"\r\n                variant=\"success\"\r\n                onClose={handleClose}\r\n            />\r\n            <Card className={classes.row}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        className={classes.filename}\r\n                    >{row.fileName}</Typography>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        color=\"default\"\r\n                        className={classes.spacing}\r\n                        onClick={tooglePreview}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        ref={btn}\r\n                    >\r\n                        Copy\r\n                </Button>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nResultRow.propTypes = ResultViewProps;\r\n\r\nexport default ResultRow;","import React from 'react';\r\nimport { Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\nimport { ResultRow } from \"./components\";\r\nimport { Grid, Container, Button } from '@material-ui/core';\r\n\r\nconst ResultViewProps = {\r\n    results: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    onNew: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    xml: {\r\n        whiteSpace: \"pre-wrap\"\r\n    },\r\n    toolbar: {\r\n        marginBottom: theme.spacing(4)\r\n    }\r\n}));\r\n\r\ntype ResultViewProps = InferProps<typeof ResultViewProps>\r\n\r\nconst ResultViewer: React.FC<ResultViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const { results, onNew } = props;\r\n\r\n    return (\r\n        <Container maxWidth=\"md\" className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                className={classes.toolbar}\r\n            >\r\n                <Grid item>\r\n                    <Typography variant=\"h2\">Result</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={onNew}\r\n                    >\r\n                        New\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {results.map((row, index) => (<ResultRow key={index} row={row} />))}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nResultViewer.propTypes = ResultViewProps;\r\n\r\nexport default ResultViewer;\r\n","import React, { useState } from 'react';\r\nimport { Uploader, ResultViewer } from \"./components\";\r\n\r\nconst Converter: React.FC = () => {\r\n\r\n    const [results, setResult] = useState<Array<any>>([]);\r\n    const handleResult = (convertResult: Array<any>) => {\r\n        setResult(convertResult);\r\n    }\r\n    const handleNew = () => {\r\n        setResult([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                results.length === 0 ?\r\n                    (<Uploader onConvertSuccess={handleResult} />) :\r\n                    (<ResultViewer results={results} onNew={handleNew} />)\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Converter;","import { colors } from '@material-ui/core';\nimport {\n  PaletteOptions as MuiPaletteOptions,\n  TypeText as MuiTypeText,\n  PaletteColorOptions,\n  TypeBackground\n} from '@material-ui/core/styles/createPalette';\n\nexport interface TypeText extends MuiTypeText {\n  primary: string;\n  secondary: string;\n  disabled: string;\n  hint: string;\n  link: string;\n}\n\ninterface PaletteOptions extends MuiPaletteOptions {\n  text: Partial<TypeText>;\n  success?: PaletteColorOptions;\n  info?: PaletteColorOptions;\n  warning?: PaletteColorOptions;\n  background: Partial<TypeBackground>;\n  icon?: string;\n  white: string;\n  black: string;\n}\n\nconst white = '#FFFFFF';\nconst black = '#000000';\nconst palletOptions: PaletteOptions = {\n  white,\n  black,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: \"#fafafa\",\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n\nexport default palletOptions;\n","import { TypographyOptions } from \"@material-ui/core/styles/createTypography\";\nimport palette from './palette';\n\nconst typography: TypographyOptions = {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n\nexport default typography;\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography,\n  // MuiCssBaseline: {\n  //   '@global': {\n  //     body: {\n  //       color:\"white\",\n  //       backgroundColor: \"#212121\"\n  //     },\n  //   },\n  // },\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n\r\n","import React from 'react';\nimport { CssBaseline } from \"@material-ui/core\";\nimport { Converter } from \"./components\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { theme } from \"./theme\";\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Converter />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}